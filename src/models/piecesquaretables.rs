pub static PIECE_SQUARE_TABLES: [[i32; 64]; 12] = [
    PAWN_TABLE_WHITE,
    BISHOP_TABLE_WHITE,
    KNIGHT_TABLE_WHITE,
    ROOK_TABLE_WHITE,
    KING_TABLE_WHITE,
    QUEEN_TABLE_WHITE,
    PAWN_TABLE_BLACK,
    BISHOP_TABLE_BLACK,
    KNIGHT_TABLE_BLACK,
    ROOK_TABLE_BLACK,
    KING_TABLE_BLACK,
    QUEEN_TABLE_BLACK,
];

// Based on https://www.chessprogramming.org/Simplified_Evaluation_Function
// Added the value of the piece in centipawns directly, so it is easier to iterate through

const PAWN_TABLE_WHITE: [i32; 64] = [
    100, 100, 100, 100, 100, 100, 100, 100, 150, 150, 150, 150, 150, 150, 150, 150, 110, 110, 120,
    130, 130, 120, 110, 110, 105, 105, 110, 125, 125, 110, 105, 105, 100, 100, 100, 120, 120, 100,
    100, 100, 105, 95, 90, 100, 100, 90, 95, 105, 105, 110, 110, 80, 80, 110, 110, 105, 100, 100,
    100, 100, 100, 100, 100, 100,
];

const BISHOP_TABLE_WHITE: [i32; 64] = [
    280, 290, 290, 290, 290, 290, 290, 280, 290, 300, 300, 300, 300, 300, 300, 290, 290, 300, 305,
    310, 310, 305, 300, 290, 290, 305, 305, 310, 310, 305, 305, 290, 290, 300, 310, 310, 310, 310,
    300, 290, 290, 310, 310, 310, 310, 310, 310, 290, 290, 305, 300, 300, 300, 300, 305, 290, 280,
    290, 290, 290, 290, 290, 290, 280,
];

const KNIGHT_TABLE_WHITE: [i32; 64] = [
    250, 260, 270, 270, 270, 270, 260, 250, 260, 280, 300, 300, 300, 300, 280, 260, 270, 300, 310,
    315, 315, 310, 300, 270, 270, 305, 315, 320, 320, 315, 305, 270, 270, 300, 315, 320, 320, 315,
    300, 270, 270, 305, 310, 315, 315, 310, 305, 270, 260, 280, 300, 305, 305, 300, 280, 260, 250,
    260, 270, 270, 270, 270, 260, 250,
];

const ROOK_TABLE_WHITE: [i32; 64] = [
    500, 500, 500, 500, 500, 500, 500, 500, 505, 510, 510, 510, 510, 510, 510, 505, 495, 500, 500,
    500, 500, 500, 500, 495, 495, 500, 500, 500, 500, 500, 500, 495, 495, 500, 500, 500, 500, 500,
    500, 495, 495, 500, 500, 500, 500, 500, 500, 495, 495, 500, 500, 500, 500, 500, 500, 495, 500,
    500, 500, 505, 505, 500, 500, 500,
];

// todo: add endgame piece square table
const KING_TABLE_WHITE: [i32; 64] = [
    19970, 19960, 19960, 19950, 19950, 19960, 19960, 19970, 19970, 19960, 19960, 19950, 19950,
    19960, 19960, 19970, 19970, 19960, 19960, 19950, 19950, 19960, 19960, 19970, 19970, 19960,
    19960, 19950, 19950, 19960, 19960, 19970, 19980, 19970, 19970, 19960, 19960, 19970, 19970,
    19980, 19990, 19980, 19980, 19980, 19980, 19980, 19980, 19990, 20020, 20020, 20000, 20000,
    20000, 20000, 20020, 20020, 20020, 20030, 20010, 20000, 20000, 20010, 20030, 20020,
];

const QUEEN_TABLE_WHITE: [i32; 64] = [
    880, 890, 890, 895, 895, 890, 890, 880, 890, 900, 900, 900, 900, 900, 900, 890, 890, 900, 905,
    905, 905, 905, 900, 890, 895, 900, 905, 905, 905, 905, 900, 895, 900, 900, 905, 905, 905, 905,
    900, 895, 890, 905, 905, 905, 905, 905, 900, 890, 890, 900, 905, 900, 900, 900, 900, 890, 880,
    890, 890, 895, 895, 890, 890, 880,
];

const PAWN_TABLE_BLACK: [i32; 64] = [
    -100, -100, -100, -100, -100, -100, -100, -100, -105, -110, -110, -80, -80, -110, -110, -105,
    -105, -95, -90, -100, -100, -90, -95, -105, -100, -100, -100, -120, -120, -100, -100, -100,
    -105, -105, -110, -125, -125, -110, -105, -105, -110, -110, -120, -130, -130, -120, -110, -110,
    -150, -150, -150, -150, -150, -150, -150, -150, -100, -100, -100, -100, -100, -100, -100, -100,
];

const BISHOP_TABLE_BLACK: [i32; 64] = [
    -280, -290, -290, -290, -290, -290, -290, -280, -290, -305, -300, -300, -300, -300, -305, -290,
    -290, -310, -310, -310, -310, -310, -310, -290, -290, -300, -310, -310, -310, -310, -300, -290,
    -290, -305, -305, -310, -310, -305, -305, -290, -290, -300, -305, -310, -310, -305, -300, -290,
    -290, -300, -300, -300, -300, -300, -300, -290, -280, -290, -290, -290, -290, -290, -290, -280,
];

const KNIGHT_TABLE_BLACK: [i32; 64] = [
    -250, -260, -270, -270, -270, -270, -260, -250, -260, -280, -300, -305, -305, -300, -280, -260,
    -270, -305, -310, -315, -315, -310, -305, -270, -270, -300, -315, -320, -320, -315, -300, -270,
    -270, -305, -315, -320, -320, -315, -305, -270, -270, -300, -310, -315, -315, -310, -300, -270,
    -260, -280, -300, -300, -300, -300, -280, -260, -250, -260, -270, -270, -270, -270, -260, -250,
];

const ROOK_TABLE_BLACK: [i32; 64] = [
    -500, -500, -500, -505, -505, -500, -500, -500, -495, -500, -500, -500, -500, -500, -500, -495,
    -495, -500, -500, -500, -500, -500, -500, -495, -495, -500, -500, -500, -500, -500, -500, -495,
    -495, -500, -500, -500, -500, -500, -500, -495, -495, -500, -500, -500, -500, -500, -500, -495,
    -505, -510, -510, -510, -510, -510, -510, -505, -500, -500, -500, -500, -500, -500, -500, -500,
];

// todo: add endgame piece square table
const KING_TABLE_BLACK: [i32; 64] = [
    -20020, -20030, -20010, -20000, -20000, -20010, -20030, -20020, -20020, -20020, -20000, -20000,
    -20000, -20000, -20020, -20020, -19990, -19980, -19980, -19980, -19980, -19980, -19980, -19990,
    -19980, -19970, -19970, -19960, -19960, -19970, -19970, -19980, -19970, -19960, -19960, -19950,
    -19950, -19960, -19960, -19970, -19970, -19960, -19960, -19950, -19950, -19960, -19960, -19970,
    -19970, -19960, -19960, -19950, -19950, -19960, -19960, -19970, -19970, -19960, -19960, -19950,
    -19950, -19960, -19960, -19970,
];

const QUEEN_TABLE_BLACK: [i32; 64] = [
    -880, -890, -890, -895, -895, -890, -890, -880, -890, -900, -905, -900, -900, -900, -900, -890,
    -890, -905, -905, -905, -905, -905, -900, -890, -900, -900, -905, -905, -905, -905, -900, -895,
    -895, -900, -905, -905, -905, -905, -900, -895, -890, -900, -905, -905, -905, -905, -900, -890,
    -890, -900, -900, -900, -900, -900, -900, -890, -880, -890, -890, -895, -895, -890, -890, -880,
];
